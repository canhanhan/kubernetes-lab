---
- name: Set cluster
  command: >-
    kubectl config set-cluster {{ k8s_cluster_name }}
    --certificate-authority={{ k8s_admin_ca_file_src }}
    --embed-certs=true
    --server=https://{{ k8s_controller }}:6443

- name: Set credentials
  command: >-
    kubectl config set-credentials admin-user
    --client-certificate={{ k8s_admin_client_cert_file_src }}
    --client-key={{ k8s_admin_client_private_key_file_src }}
    --embed-certs=true

- name: Set context
  command: >-
    kubectl config set-context default
    --cluster={{ k8s_cluster_name }}
    --user=admin-user

- name: Use context
  command: kubectl config use-context default

- name: Apply Admin RBAC Config
  command: kubectl apply -f {{ role_path }}/files/admin.yaml

- name: Generate flannel config
  template:
    src: templates/kube-flannel.yaml.j2
    dest: .ansible/kube-flannel.yaml

- name: Apply flannel
  command: kubectl apply -f .ansible/kube-flannel.yaml

- name: Apply MetalLB
  command: kubectl apply -f {{ role_path }}/files/metallb-install.yaml

- name: Generate MetalLB config
  template:
    src: templates/metallb-config.yaml.j2
    dest: .ansible/metallb-config.yaml

- name: Apply MetalLB Config
  command: kubectl apply -f .ansible/metallb-config.yaml

- name: Apply Tiller RBAC Config
  command: kubectl apply -f {{ role_path }}/files/tiller-rbac.yaml

- name: Install helm
  command: helm init --service-account tiller --history-max 200 --wait
  register: helm_result
  changed_when: '"Tiller is already installed in the cluster" not in helm_result.stdout'

- set_fact:
    role_dir: '{{ role_path }}'

- name: Install localvolume
  include_role:
    name: helm
  vars:
    helm_name: localvolume
    helm_chart: '{{ role_dir }}/files/localvolume'
    helm_values_file: '{{ role_dir }}/files/localvolume-values.yaml'

- name: Make local-storage default
  command: "kubectl patch storageclass local-storage -p '{{ data | to_json }}'"
  vars:
    data:
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"

- name: Generate CoreDNS values
  template:
    src: templates/coredns-values.yaml.j2
    dest: .ansible/coredns-values.yaml

- name: Install CoreDNS
  include_role:
    name: helm
  vars:
    helm_name: coredns
    helm_chart: coredns
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '.ansible/coredns-values.yaml'

- name: Install Nginx Ingress
  include_role:
    name: helm
  vars:
    helm_name: nginx
    helm_chart: nginx-ingress
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '{{ role_dir }}/files/nginx-values.yaml'

- name: Install Prometheus
  include_role:
    name: helm
  vars:
    helm_name: prometheus
    helm_chart: prometheus
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '{{ role_dir }}/files/prometheus-values.yaml'

- name: Install Fluentd-elasticsearch
  include_role:
    name: helm
  vars:
    helm_name: fluentd-elasticsearch
    helm_chart: fluentd-elasticsearch
    helm_repo: https://kiwigrid.github.io

- name: Generate Grafana secret
  command: "kubectl create secret generic grafana-secret --from-literal='username=admin' --from-literal='password=admin'"
  register: grafana_result
  failed_when: grafana_result.rc != 0 and "already exists" not in grafana_result.stderr
  changed_when: '"already exists" not in grafana_result.stderr'

- name: Install Grafana
  include_role:
    name: helm
  vars:
    helm_name: grafana
    helm_chart: grafana
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '{{ role_dir }}/files/grafana-values.yaml'

- name: Install ElasticSearch
  include_role:
    name: helm
  vars:
    helm_name: elasticsearch
    helm_chart: elasticsearch
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '{{ role_dir }}/files/elasticsearch-values.yaml'

- name: Install Kibana
  include_role:
    name: helm
  vars:
    helm_name: kibana
    helm_chart: kibana
    helm_repo: https://kubernetes-charts.storage.googleapis.com
    helm_values_file: '{{ role_dir }}/files/kibana-values.yaml'
