---
- name: Download kubelet
  become: yes
  get_url:
    url: '{{ k8s_kubelet_url }}'
    dest: /usr/local/bin/kubelet
    mode: 0775

- name: Create kubelet directory
  become: yes
  file:
    state: directory
    path: /var/lib/kubelet

- name: Copy kubelet server certificates
  become: yes
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0640
    owner: root
    group: root
  with_items:
    - { src: '{{ k8s_kubelet_client_cert_file_src }}', dest: '{{ k8s_kubelet_client_cert_file }}' }
    - { src: '{{ k8s_kubelet_client_private_key_file_src }}', dest: '{{ k8s_kubelet_client_private_key_file }}' }
    - { src: '{{ k8s_kubelet_ca_file_src }}', dest: '{{ k8s_kubelet_ca_file }}' }

- name: Set cluster for kubelet
  become: yes
  command: >-
    /usr/local/bin/kubectl config set-cluster {{ k8s_cluster_name }}
    --certificate-authority={{ k8s_kubelet_ca_file }}
    --embed-certs=true
    --server=https://{{ k8s_controller }}:6443
    --kubeconfig=/tmp/kubelet.kubeconfig

- name: Set credentials for kubelet
  become: yes
  command: >-
    /usr/local/bin/kubectl config set-credentials system:node:{{ inventory_hostname_short }}
    --client-certificate={{ k8s_kubelet_client_cert_file }}
    --client-key={{ k8s_kubelet_client_private_key_file }}
    --embed-certs=true
    --kubeconfig=/tmp/kubelet.kubeconfig

- name: Set context for kubelet
  become: yes
  command: >-
    /usr/local/bin/kubectl config set-context default
    --cluster={{ k8s_cluster_name }}
    --user=system:node:{{ inventory_hostname_short }}
    --kubeconfig=/tmp/kubelet.kubeconfig

- name: Use context for kubelet
  become: yes
  command: >-
    /usr/local/bin/kubectl config use-context default
    --kubeconfig=/tmp/kubelet.kubeconfig

- name: Copy kubeconfig for kubelet
  become: true
  copy:
    src: /tmp/kubelet.kubeconfig
    dest: /var/lib/kubelet/kubelet.kubeconfig
    remote_src: true

- name: Create KubeletConfiguration
  become: yes
  template:
    src: templates/kubelet-config.yaml.j2
    dest: /var/lib/kubelet/kubelet-config.yaml
    mode: 0644
    owner: root
    group: root

- name: Generate systemd config
  become: yes
  template:
    src: templates/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  register: systemd_result

- name: Reload systemd
  when: systemd_result is changed
  become: yes
  systemd:
    daemon_reload: yes

- name: Start kubelet service
  become: yes
  service:
    name: kubelet
    state: started
    enabled: yes
